{"ast":null,"code":"import * as api from '../api'; // Create actions using action creators\n// adding async (dispatch) func from redux-thunk to return the data, as it takes time for the payload to fetch the data.\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(); // data in response\n\n    dispatch({\n      type: 'FETCH_ALL',\n      payload: []\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: 'CREATE',\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["C:/Dev/MERN/memories_project/client/src/actions/posts.js"],"names":["api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post"],"mappings":"AAAA,OAAO,KAAKA,GAAZ,MAAqB,QAArB,C,CAEA;AACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC9C,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB,CADA,CACyC;;AACzCF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,OAAO,EAAE;AAA9B,KAAD,CAAR;AACH,GAHD,CAGE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACH;AACJ,CAPM;AASP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACpD,MAAI;AACA,UAAM;AAACC,MAAAA;AAAD,QAAS,MAAMH,GAAG,CAACW,UAAJ,CAAeC,IAAf,CAArB;AAEAV,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAE,QAAP;AAAiBC,MAAAA,OAAO,EAAEH;AAA1B,KAAD,CAAR;AACH,GAJD,CAIE,OAAOI,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CARM","sourcesContent":["import * as api from '../api';\r\n\r\n// Create actions using action creators\r\n// adding async (dispatch) func from redux-thunk to return the data, as it takes time for the payload to fetch the data.\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts(); // data in response\r\n        dispatch({ type: 'FETCH_ALL', payload: [] });\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const {data} = await api.createPost(post);\r\n\r\n        dispatch({type: 'CREATE', payload: data});\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}